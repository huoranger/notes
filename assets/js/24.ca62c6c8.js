(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{345:function(t,e,a){"use strict";a.r(e);var r=a(7),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"插件汇总"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件汇总"}},[t._v("#")]),t._v(" 插件汇总")]),t._v(" "),e("h3",{attrs:{id:"generateallsetter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generateallsetter"}},[t._v("#")]),t._v(" GenerateAllSetter")]),t._v(" "),e("p",[e("strong",[t._v("快速生成get/set")])]),t._v(" "),e("p",[t._v("实际的开发中，可能会经常为某个对象中多个属性进行 set 赋值，尽管可以用BeanUtil.copyProperties()方式批量赋值，但这种方式有一些弊端，存在属性值覆盖的问题，所以不少场景还是需要手动 set。如果一个对象属性太多 set 起来也很痛苦，GenerateAllSetter可以一键将对象属性都 set 出来。\n"),e("strong",[t._v("快捷键：Alt+Enter")])]),t._v(" "),e("h3",{attrs:{id:"maven-helper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#maven-helper"}},[t._v("#")]),t._v(" Maven Helper")]),t._v(" "),e("p",[e("strong",[t._v("Maven 依赖解决")])]),t._v(" "),e("p",[t._v("Maven Helper 是解决Maven依赖冲突的利器，可以快速查找项目中的依赖冲突。安装后打开pom文件，底部有 Dependency Analyzer 视图。显示红色表示存在依赖冲突，点进去直接在包上右键Exclude排除，pom文件中会做出相应排除包的操作。")]),t._v(" "),e("ul",[e("li",[t._v("Conflicts(冲突)")]),t._v(" "),e("li",[t._v("All Dependencies as List(列表形式查看所有依赖)")]),t._v(" "),e("li",[t._v("All Dependencies as Tree(树结构查看所有依赖)，并且这个页面还支持搜索。")])]),t._v(" "),e("h3",{attrs:{id:"codota"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#codota"}},[t._v("#")]),t._v(" Codota")]),t._v(" "),e("p",[e("strong",[t._v("编程提示")])]),t._v(" "),e("p",[t._v("用了Codota 后不再怕对API不会用，举个栗子：当我们用stream().filter()对List操作，可是对filter()用法不熟，按常理我们会百度一下，而用Codota 会提示很多filter()用法，节省不少查阅资料的时间。")]),t._v(" "),e("h3",{attrs:{id:"free-mybatis-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#free-mybatis-plugin"}},[t._v("#")]),t._v(" Free MyBatis Plugin")]),t._v(" "),e("p",[e("strong",[t._v("mapper 跳转到 xml")])]),t._v(" "),e("p",[t._v("在使用MyBatis 作为持久框架时有一个尴尬的问题：SQL xml文件和定义的Java接口无法相互跳转，不能像Java接口间调用那样，只能全局搜索稍显麻烦。Free MyBatis Plugin将两者之间进行关联。")]),t._v(" "),e("h3",{attrs:{id:"properties-to-yaml-converter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#properties-to-yaml-converter"}},[t._v("#")]),t._v(" Properties to YAML Converter")]),t._v(" "),e("p",[e("strong",[t._v("配置文件格式转换")])]),t._v(" "),e("p",[t._v("将Properties 配置文件一键转换成YAML 文件，很实用的一个插件。"),e("strong",[t._v("「注意：要提前备份原Properties 文件」")])]),t._v(" "),e("h3",{attrs:{id:"gsonformatplus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gsonformatplus"}},[t._v("#")]),t._v(" GsonFormatPlus")]),t._v(" "),e("p",[t._v("一个非常实用的插件，它可以将JSON字符串自动转换成Java实体类。")]),t._v(" "),e("p",[t._v("在和其他系统对接时，往往以"),e("code",[t._v("JSON")]),t._v("格式传输数据，而我们需要用"),e("code",[t._v("Java")]),t._v("实体接收数据入库或者包装转发，如果字段太多一个一个编写那就太麻烦了。")]),t._v(" "),e("h3",{attrs:{id:"translation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#translation"}},[t._v("#")]),t._v(" Translation")]),t._v(" "),e("p",[t._v("Translation是一款非常好用的翻译插件，可以随时随地翻译单词、甚至一段话，不再需要额外打开浏览器搜索翻译网站了！")])])}),[],!1,null,null,null);e.default=s.exports}}]);